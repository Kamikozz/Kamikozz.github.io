{"version":3,"sources":["./src/$_lazy_route_resource lazy","./src/app/app-routing.module.ts","./src/app/app.component.css","./src/app/app.component.html","./src/app/app.component.ts","./src/app/app.module.ts","./src/app/hardtest.service.ts","./src/app/hardtest/hardtest.component.css","./src/app/hardtest/hardtest.component.html","./src/app/hardtest/hardtest.component.ts","./src/app/header/header.component.css","./src/app/header/header.component.html","./src/app/header/header.component.ts","./src/app/message.service.ts","./src/app/messages/messages.component.css","./src/app/messages/messages.component.html","./src/app/messages/messages.component.ts","./src/app/test-form/test-form.component.css","./src/app/test-form/test-form.component.html","./src/app/test-form/test-form.component.ts","./src/app/test.ts","./src/environments/environment.ts","./src/main.ts"],"names":[],"mappings":"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","file":"main.bundle.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncatched exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tthrow new Error(\"Cannot find module '\" + req + \"'.\");\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./src/$$_lazy_route_resource lazy recursive\";\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/$$_lazy_route_resource lazy\n// module id = ./src/$$_lazy_route_resource lazy recursive\n// module chunks = main","import { NgModule } from '@angular/core';\r\nimport { RouterModule, Routes } from '@angular/router';\r\n\r\nimport { HardtestComponent} from './hardtest/hardtest.component';\r\nimport { TestFormComponent} from './test-form/test-form.component';\r\n\r\n\r\nconst routes: Routes = [\r\n  // { path: '', redirectTo: '/hardtest', pathMatch: 'full' },\r\n  { path: 'hardtest', component: HardtestComponent},\r\n  { path: '', component: TestFormComponent},\r\n];\r\n\r\n@NgModule({\r\n  imports: [ RouterModule.forRoot(routes) ],\r\n  exports: [ RouterModule ]\r\n})\r\nexport class AppRoutingModule { }\r\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/app-routing.module.ts","module.exports = \"\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/app.component.css\n// module id = ./src/app/app.component.css\n// module chunks = main","module.exports = \"<app-header></app-header>\\r\\n<router-outlet></router-outlet>\\r\\n<!--<app-test-form></app-test-form>-->\\r\\n<!--<app-hardtest></app-hardtest>-->\\r\\n<app-messages></app-messages>\\r\\n\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/app.component.html\n// module id = ./src/app/app.component.html\n// module chunks = main","import { Component } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'app-root',\r\n  templateUrl: './app.component.html',\r\n  styleUrls: ['./app.component.css']\r\n})\r\n\r\nexport class AppComponent {\r\n  title = 'app';\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/app.component.ts","/** Modules */\r\nimport { BrowserModule } from '@angular/platform-browser';\r\nimport { NgModule } from '@angular/core';\r\nimport { NgbModule } from '@ng-bootstrap/ng-bootstrap';\r\nimport { AppRoutingModule } from './app-routing.module';\r\nimport { FormsModule } from '@angular/forms'; // <-- NgModel lives here\r\n/** HTTP */\r\nimport { HttpClientModule } from '@angular/common/http';\r\n// import { InterceptorModule } from './interceptor.module'; // for CORS\r\n\r\n/** Compontents */\r\nimport { AppComponent } from './app.component';\r\nimport { HeaderComponent } from './header/header.component';\r\nimport { TestFormComponent } from './test-form/test-form.component';\r\nimport { MessagesComponent } from './messages/messages.component';\r\nimport { HardtestComponent } from './hardtest/hardtest.component';\r\n\r\n/** Services */\r\nimport { MessageService } from './message.service';\r\nimport { HardtestService } from './hardtest.service';\r\n\r\n@NgModule({\r\n  declarations: [\r\n    AppComponent,\r\n    HeaderComponent,\r\n    TestFormComponent,\r\n    MessagesComponent,\r\n    HardtestComponent\r\n  ],\r\n  imports: [\r\n    BrowserModule,\r\n    NgbModule.forRoot(),\r\n    FormsModule, //\r\n    AppRoutingModule,\r\n    HttpClientModule,\r\n    // InterceptorModule, // for CORS\r\n  ],\r\n  providers: [\r\n    MessageService,\r\n    HardtestService\r\n  ],\r\n  bootstrap: [AppComponent]\r\n})\r\nexport class AppModule { }\r\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/app.module.ts","import { Injectable } from '@angular/core';\r\n\r\nimport { HttpClient, HttpHeaders } from '@angular/common/http';\r\nimport { catchError, map, tap } from 'rxjs/operators';\r\n\r\nimport { Observable } from 'rxjs/Observable';\r\nimport { of } from 'rxjs/observable/of';\r\nimport { MessageService } from './message.service';\r\nimport { Test } from './test';\r\n\r\n// 'Content-Type': 'application/json',\r\n// 'Accept': 'application/json',\r\n// 'Access-Control-Allow-Headers': 'Content-Type'\r\n// 'Access-Control-Allow-Origin':'https://maxqfz.net',\r\n// 'Origin':'https://maxqfz.net'\r\n// 'Content-Type': '',\r\n// 'Accept': 'application/json, text/plain',\r\n// 'Access-Control-Allow-Origin': '*',\r\n// 'Access-Control-Allow-Methods': 'GET, PUT, POST, DELETE, PATCH, OPTIONS',\r\n// 'Access-Control-Allow-Headers':'Content-Type, X-Requested-With, Accept',\r\n// 'Access-Control-Allow-Credentials': 'true',\r\n// 'Content-type': 'multipart/form-data',\r\n\r\nconst httpOptions = {\r\n  headers: new HttpHeaders({\r\n    // 'Access-Control-Allow-Origin': '*',\r\n    // 'Access-Control-Allow-Credentials': 'true',\r\n    // 'Access-Control-Allow-Methods': 'GET,HEAD,OPTIONS,POST,PUT',\r\n    // 'Access-Control-Allow-Headers': 'Access-Control-Allow-Headers, Origin, Accept, X-Requested-With, Content-Type,\r\n        // Access-Control-Request-Method, Access-Control-Request-Headers, Authorization'\r\n  })\r\n};\r\n\r\n@Injectable()\r\nexport class HardtestService {\r\n  private API_Url = 'https://maxqfz.net/hardtester';  // URL to web api\r\n\r\n  constructor(\r\n    private messageService: MessageService,\r\n    private http: HttpClient) { }\r\n\r\n  // getHeroes(): Observable<Hero[]> {\r\n  //   // TODO: send the message _after_ fetching the heroes\r\n  //   this.messageService.add('HeroService: fetched heroes');\r\n  //   return of(HEROES);\r\n  // }\r\n  // getHero(id: number): Observable<Hero> {\r\n  //   // TODO: send the message _after_ fetching the hero\r\n  //   this.messageService.add(`HeroService: fetched hero id=${id}`);\r\n  //   return of(HEROES.find(hero => hero.id === id));\r\n  // }\r\n\r\n  // /** GET hero by id. Will 404 if id not found */\r\n  // getHero(id: number): Observable<Hero> {\r\n  //   const url = `${this.heroesUrl}/${id}`;\r\n  //   return this.http.get<Hero>(url).pipe(\r\n  //     tap(_ => this.log(`fetched hero id=${id}`)),\r\n  //     catchError(this.handleError<Hero>(`getHero id=${id}`))\r\n  //   );\r\n  // }\r\n  // /** GET heroes from the server */\r\n  // stopHardtest (): Observable<any> {\r\n  //   const url = `${this.API_Url}`;\r\n  //   return this.http.get<any>(`https://my-json-server.typicode.com/techsithgit/json-faker-directory/profiles`)\r\n  //     .pipe(\r\n  //       tap(data => this.log(`fetched dataFromStopHardTest`)),\r\n  //       catchError(this.handleError<any>(`stopHardtest`))\r\n  //     );\r\n  // }\r\n\r\n  // getHero(id: number): Observable<Hero> {\r\n  //   const url = `${this.heroesUrl}/${id}`;\r\n  //   return this.http.get<Hero>(url).pipe(\r\n  //     tap(_ => this.log(`fetched hero id=${id}`)),\r\n  //     catchError(this.handleError<Hero>(`getHero id=${id}`))\r\n  //   );\r\n  // }\r\n\r\n  // /** GET something TODO:WORKS */\r\n  // stopHardtest (): Observable<string> {\r\n  //   const url = `${this.API_Url}/stop`;\r\n  //   return this.http.get<string>(`http://httpbin.org/headers`).pipe(\r\n  //       tap((data) => {\r\n  //           this.log(`fetched data_from_stopHardtest`);\r\n  //         }),\r\n  //       catchError(this.handleError<string>(`stopHardtest`))\r\n  //     );\r\n  // }\r\n\r\n  // // Часть кода, для посылки заголовков в GET запросе\r\n  // const headerDict = {\r\n  //   'Content-Type': 'application/json',\r\n  //   'Accept': 'application/json',\r\n  //   'Access-Control-Allow-Headers': 'Content-Type',\r\n  // }\r\n  //\r\n  // const requestOptions = {\r\n  //   headers: new Headers(headerDict),\r\n  // };\r\n  //\r\n  // return this.http.get(this.heroesUrl, requestOptions)\r\n\r\n  /** GET request stoping test */\r\n  stopHardtest (): Observable<string> {\r\n    const url = `${this.API_Url}/stop`;\r\n    return this.http.get<string>(url).pipe(\r\n      tap((data) => {\r\n        this.log(`fetched data_from_stopHardtest GET ${url}`);\r\n      }),\r\n      catchError(this.handleError<string>(`stopHardtest`))\r\n    );\r\n  }\r\n\r\n  /** GET heroes from the server */\r\n  startHardtest (test: Test): Observable<string> {\r\n    const url = `${this.API_Url}/start`;\r\n    return this.http.post<string>(url, test, httpOptions).pipe(\r\n      tap((data) => {\r\n        this.log(`fetched data_from_startHardtest`);\r\n      }),\r\n      catchError(this.handleError<string>(`startHardtest`))\r\n    );\r\n  }\r\n\r\n  /** GET heroes from the server */\r\n  POSTstopHardtest (test: Test): Observable<string> {\r\n    const url = `${this.API_Url}/start`;\r\n    return this.http.post<string>(url, test, httpOptions).pipe(\r\n      tap((data) => {\r\n        this.log(`fetched data_from_POSTstopHardtest`);\r\n      }),\r\n      catchError(this.handleError<string>(`POSTstopHardtest`))\r\n    );\r\n  }\r\n\r\n  /**\r\n   * Handle Http operation that failed.\r\n   * Let the app continue.\r\n   * @param operation - name of the operation that failed\r\n   * @param result - optional value to return as the observable result\r\n   */\r\n  private handleError<T> (operation = 'operation', result?: T) {\r\n    return (error: any): Observable<T> => {\r\n\r\n      // TODO: send the error to remote logging infrastructure\r\n      console.error(error); // log to console instead\r\n\r\n      // TODO: better job of transforming error for user consumption\r\n      this.log(`${operation} failed: ${error.message}`);\r\n\r\n      // Let the app keep running by returning an empty result.\r\n      return of(result as T);\r\n    };\r\n  }\r\n\r\n  /** Log a HeroService message with the MessageService */\r\n  private log(message: string) {\r\n    this.messageService.add('HardtestService: ' + message);\r\n  }\r\n\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/hardtest.service.ts","module.exports = \".formWhite{\\r\\n  background-color: white;\\r\\n}\\r\\n\\r\\n.header {\\r\\n  background-color: rgba(0, 0, 0, 0.2);\\r\\n  border-bottom: 1px solid #707070;\\r\\n  height: 50px !important;\\r\\n  font-size: 15px !important;\\r\\n}\\r\\n\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/hardtest/hardtest.component.css\n// module id = ./src/app/hardtest/hardtest.component.css\n// module chunks = main","module.exports = \"<div>\\r\\n  <button (click)=\\\"stopHardtest()\\\">\\r\\n    testGET</button>\\r\\n</div>\\r\\n<div *ngIf=\\\"strResultOfRequest\\\">\\r\\n  <!--<label>GET Request:</label>-->\\r\\n  <!--<textarea  rows=\\\"5\\\" style=\\\"width:100%\\\">{{test | json}}</textarea>-->\\r\\n  <!--<pre></pre>-->\\r\\n  <label class=\\\"formWhite\\\">GET Respond:</label>\\r\\n  <pre class=\\\"formWhite\\\">{{strResultOfRequest |  json}}</pre>\\r\\n  <!--<textarea  rows=\\\"5\\\" style=\\\"width:100%\\\">{{strResultOfRequest |  json}}</textarea>-->\\r\\n</div>\\r\\n<div>\\r\\n  <button (click)=\\\"POSTstopHardtest(test)\\\">\\r\\n    testPOST</button>\\r\\n</div>\\r\\n<div *ngIf=\\\"POSTstrResultOfRequest\\\">\\r\\n  <!--<pre>{{ POSTstrResultOfRequest | json }}</pre>-->\\r\\n  <label class=\\\"formWhite\\\">POST Request:</label>\\r\\n  <pre class=\\\"formWhite\\\">{{ test | json }}</pre>\\r\\n  <!--<textarea  readonly rows=\\\"5\\\" style=\\\"width:100%\\\">{{ test | json }}</textarea>-->\\r\\n  <!--<pre></pre>-->\\r\\n  <label class=\\\"formWhite\\\">POST Respond:</label>\\r\\n  <pre class=\\\"formWhite\\\">{{POSTstrResultOfRequest| json}}</pre>\\r\\n  <!--<textarea  readonly #resOfReq rows=\\\"5\\\" style=\\\"width:100%\\\">{{POSTstrResultOfRequest| json}}</textarea>-->\\r\\n</div>\\r\\n\\r\\n<!--<div>-->\\r\\n  <!--<label>Result:</label>-->\\r\\n  <!--<input #success readonly style=\\\"width:100%\\\">-->\\r\\n  <!--<input #message readonly style=\\\"width:100%\\\">-->\\r\\n<!--</div>-->\\r\\n\\r\\n<div>\\r\\n  <div>\\r\\n    <label class=\\\"formWhite\\\">URL:</label>\\r\\n    <textarea [(ngModel)]=\\\"test.url\\\"></textarea>\\r\\n  </div>\\r\\n  <div>\\r\\n    <label class=\\\"formWhite\\\">Servers:</label>\\r\\n    <textarea [(ngModel)]=\\\"test.servers\\\"></textarea>\\r\\n  </div>\\r\\n  <div>\\r\\n    <label class=\\\"formWhite\\\">Threads:</label>\\r\\n    <textarea [(ngModel)]=\\\"test.threads\\\"></textarea>\\r\\n  </div>\\r\\n</div>\\r\\n\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/hardtest/hardtest.component.html\n// module id = ./src/app/hardtest/hardtest.component.html\n// module chunks = main","import { Component, OnInit } from '@angular/core';\r\nimport { HardtestService } from '../hardtest.service';\r\nimport { Test } from '../test';\r\n\r\n@Component({\r\n  selector: 'app-hardtest',\r\n  templateUrl: './hardtest.component.html',\r\n  styleUrls: ['./hardtest.component.css']\r\n})\r\nexport class HardtestComponent implements OnInit {\r\n\r\n  constructor(private hardtestService: HardtestService) { }\r\n\r\n  strResultOfRequest: string;\r\n  str1: string;\r\n  POSTstrResultOfRequest: any;\r\n\r\n  test = new Test();\r\n\r\n  ngOnInit() {\r\n  }\r\n  // stopHardtest1(){\r\n  //   this.http.get(`https://httpbin.org/headers`)\r\n  //     .subscribe(\r\n  //       (data:any) => {\r\n  //         console.log(data);\r\n  //       }\r\n  //     )\r\n  // }\r\n\r\n  stopHardtest(): void {\r\n    this.hardtestService.stopHardtest()\r\n      .subscribe((respond) => {\r\n        this.strResultOfRequest = respond;\r\n        // this.str1 = respond.headers.Accept;\r\n      });\r\n  }\r\n\r\n  POSTstopHardtest(test: Test): void {\r\n    this.hardtestService.POSTstopHardtest(test)\r\n      .subscribe((respond) => {\r\n        this.POSTstrResultOfRequest = respond;\r\n        // this.str1 = respond.headers.Accept;\r\n      });\r\n  }\r\n\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/hardtest/hardtest.component.ts","module.exports = \".header {\\r\\n    background-color: rgba(0, 0, 0, 0.2);\\r\\n    border-bottom: 1px solid #707070;\\r\\n    height: 50px !important;\\r\\n    font-size: 15px !important;\\r\\n}\\r\\n\\r\\n.btn-style {\\r\\n    border: 0px !important;\\r\\n    color: #ffffff !important;\\r\\n    background-color: rgba(0, 0, 0, 0);\\r\\n    font-size: 15px !important;\\r\\n    width: 160px;\\r\\n    height: 50px;\\r\\n    border-radius: 0 !important;\\r\\n    margin-right: 0 !important;\\r\\n}\\r\\n\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/header/header.component.css\n// module id = ./src/app/header/header.component.css\n// module chunks = main","module.exports = \"<nav class=\\\"navbar navbar-expand-lg navbar-dark fixed-top header\\\">\\r\\n    <a class=\\\"navbar-brand\\\" href=\\\"#\\\">HardTester</a>\\r\\n    <button class=\\\"navbar-toggler\\\" type=\\\"button\\\" data-toggle=\\\"collapse\\\" data-target=\\\"#navbarSupportedContent\\\" aria-controls=\\\"navbarSupportedContent\\\" aria-expanded=\\\"false\\\" aria-label=\\\"Toggle navigation\\\">\\r\\n      <span class=\\\"navbar-toggler-icon\\\"></span>\\r\\n    </button>\\r\\n  \\r\\n    <div class=\\\"collapse navbar-collapse navbar-right\\\" id=\\\"navbarSupportedContent\\\">\\r\\n      <ul class=\\\"navbar-nav ml-auto\\\">\\r\\n\\r\\n        <li class=\\\"nav-item active ml-auto\\\">\\r\\n          <button class=\\\"btn btn-lg btn-secondary btn-style\\\"><i class=\\\"fas fa-home\\\"></i> Главная</button>\\r\\n        </li>\\r\\n\\r\\n        <li ngbDropdown class=\\\"nav-item dropdown active\\\" >\\r\\n            <div ngbDropdown class=\\\"d-inline-block\\\" placement=\\\"bottom-center\\\">\\r\\n                <button class=\\\"btn btn-lg btn-secondary btn-style\\\" id=\\\"dropdownBasic1\\\" ngbDropdownToggle><i class=\\\"fas fa-user-circle\\\"></i> UserID</button>\\r\\n                <div ngbDropdownMenu aria-labelledby=\\\"dropdownBasic1\\\">\\r\\n                    <button class=\\\"dropdown-item btn\\\">Профиль</button>\\r\\n                    <button class=\\\"dropdown-item btn\\\">Тесты</button>\\r\\n                    <button class=\\\"dropdown-item btn\\\">Выход</button>\\r\\n                </div>\\r\\n            </div>\\r\\n        </li>\\r\\n      </ul>\\r\\n    </div>\\r\\n  </nav>\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/header/header.component.html\n// module id = ./src/app/header/header.component.html\n// module chunks = main","import { Component, OnInit } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'app-header',\r\n  templateUrl: './header.component.html',\r\n  styleUrls: ['./header.component.css']\r\n})\r\nexport class HeaderComponent implements OnInit {\r\n\r\n  constructor() { }\r\n\r\n  ngOnInit() {\r\n  }\r\n\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/header/header.component.ts","import { Injectable } from '@angular/core';\r\n\r\n@Injectable()\r\nexport class MessageService {\r\n  messages: string[] = [];\r\n  add(message: string) {\r\n    this.messages.push(message);\r\n  }\r\n  clear() {\r\n    this.messages = [];\r\n  }\r\n  constructor() { }\r\n\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/message.service.ts","module.exports = \".formWhite{\\r\\n  background-color: white;\\r\\n}\\r\\n\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/messages/messages.component.css\n// module id = ./src/app/messages/messages.component.css\n// module chunks = main","module.exports = \"<p><div *ngIf=\\\"messageService.messages.length\\\">\\r\\n\\r\\n  <h2 class=\\\"formWhite\\\">Messages</h2>\\r\\n  <button class=\\\"clear\\\"\\r\\n          (click)=\\\"messageService.clear()\\\">clear</button>\\r\\n  <div class=\\\"formWhite\\\" *ngFor='let message of messageService.messages'> {{message}} </div>\\r\\n\\r\\n</div>\\r\\n\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/messages/messages.component.html\n// module id = ./src/app/messages/messages.component.html\n// module chunks = main","import { Component, OnInit } from '@angular/core';\r\nimport { MessageService } from '../message.service';\r\n\r\n@Component({\r\n  selector: 'app-messages',\r\n  templateUrl: './messages.component.html',\r\n  styleUrls: ['./messages.component.css']\r\n})\r\nexport class MessagesComponent implements OnInit {\r\n\r\n  constructor(public messageService: MessageService) { }\r\n\r\n  ngOnInit() {\r\n  }\r\n\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/messages/messages.component.ts","module.exports = \".Testform {\\r\\n    height: 450px;\\r\\n    background-color: white;\\r\\n    border-radius: 11px;\\r\\n    margin-top: 70px;\\r\\n    margin-left: auto;\\r\\n    margin-right: auto;\\r\\n}\\r\\n\\r\\n.width-inp {\\r\\n    width: 85%;\\r\\n}\\r\\n\\r\\n.backfont {\\r\\n    background-color: #F1F9FF;\\r\\n    border: 2px solid #BCE0FD;\\r\\n}\\r\\n\\r\\n/** Styles for DEBUG*/\\r\\n\\r\\n.formWhite{\\r\\n  background-color: white;\\r\\n}\\r\\n\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/test-form/test-form.component.css\n// module id = ./src/app/test-form/test-form.component.css\n// module chunks = main","module.exports = \"<div class=\\\"Testform col-6\\\">\\r\\n    <div class=\\\"container\\\">\\r\\n        <div class=\\\"row justify-content-center\\\">\\r\\n            <div class=\\\"col-10\\\">\\r\\n                <label class=\\\"mt-5\\\">Адрес сайта для тестирования</label>\\r\\n                <input [(ngModel)]=\\\"test.url\\\" type=\\\"text\\\" class=\\\"form-control backfont\\\" id=\\\"site\\\" placeholder=\\\"Ваш сайт\\\">\\r\\n            </div>\\r\\n        </div>\\r\\n        <div class=\\\"row mt-5 justify-content-center\\\">\\r\\n            <div class=\\\"col-5\\\">\\r\\n                <label >Таймаут ответа(с)</label>\\r\\n                <input [(ngModel)]=\\\"test.servers\\\" type=\\\"text\\\" class=\\\"form-control text-center backfont\\\" id=\\\"timeout\\\" placeholder=\\\"\\\">\\r\\n            </div>\\r\\n            <div class=\\\"col-5\\\">\\r\\n                <label>Время теста(мин)</label>\\r\\n                <input [(ngModel)]=\\\"test.threads\\\" type=\\\"text\\\" class=\\\"form-control text-center backfont\\\" id=\\\"testtime\\\" placeholder=\\\"\\\">\\r\\n            </div>\\r\\n        </div>\\r\\n\\r\\n        <div class=\\\"row mt-5 justify-content-center\\\">\\r\\n            <label class=\\\"col-10\\\">Характер нагрузки</label>\\r\\n        </div>\\r\\n\\r\\n        <div class=\\\"row mt-2 justify-content-center\\\">\\r\\n                <div class=\\\"form-check form-check-inline col-5\\\">\\r\\n                    <input class=\\\"form-check-input\\\" type=\\\"radio\\\" name=\\\"inlineRadioOptions\\\" id=\\\"inlineRadio1\\\" value=\\\"option1\\\">\\r\\n                    <label class=\\\"form-check-label\\\" for=\\\"inlineRadio1\\\">Стресс-нагрузка</label>\\r\\n                </div>\\r\\n                <div class=\\\"form-check form-check-inline col-4\\\">\\r\\n                    <input class=\\\"form-check-input\\\" type=\\\"radio\\\" name=\\\"inlineRadioOptions\\\" id=\\\"inlineRadio2\\\" value=\\\"option2\\\">\\r\\n                    <label class=\\\"form-check-label\\\" for=\\\"inlineRadio2\\\">Постепенная нагрузка</label>\\r\\n                </div>\\r\\n        </div>\\r\\n\\r\\n        <div class=\\\"row mt-4 justify-content-center\\\">\\r\\n            <button (click)=\\\"startHardtest(test)\\\"\\r\\n                     class=\\\"col-3 btn btn-warning\\\">Начать тест</button>\\r\\n        </div>\\r\\n    </div>\\r\\n</div>\\r\\n\\r\\n<!--Debug information-->\\r\\n<div>\\r\\n  <!--<button (click)=\\\"stopHardtest()\\\" routerLink=\\\"/hardtest\\\">-->\\r\\n  <button (click)=\\\"stopHardtest()\\\">\\r\\n    DEBUG: stopTest</button>\\r\\n  <!--здесь пока ссылка тестовая, дабы хоть куда-то вела-->\\r\\n</div>\\r\\n<div *ngIf=\\\"stopRespond\\\">\\r\\n  <label class=\\\"formWhite\\\">GET Respond:</label>\\r\\n  <pre class=\\\"formWhite\\\">{{stopRespond |  json}}</pre>\\r\\n</div>\\r\\n\\r\\n<div *ngIf=\\\"startRespond\\\">\\r\\n  <label class=\\\"formWhite\\\">POST Request:</label>\\r\\n  <pre class=\\\"formWhite\\\">{{ test | json }}</pre>\\r\\n  <label class=\\\"formWhite\\\">POST Respond:</label>\\r\\n  <pre class=\\\"formWhite\\\">{{startRespond| json}}</pre>\\r\\n</div>\\r\\n\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/test-form/test-form.component.html\n// module id = ./src/app/test-form/test-form.component.html\n// module chunks = main","import { Component, OnInit } from '@angular/core';\r\nimport { HardtestService } from '../hardtest.service';\r\nimport { Test } from '../test';\r\n\r\n@Component({\r\n  selector: 'app-test-form',\r\n  templateUrl: './test-form.component.html',\r\n  styleUrls: ['./test-form.component.css']\r\n})\r\nexport class TestFormComponent implements OnInit {\r\n  test = new Test();\r\n  stopRespond: string;\r\n  startRespond: any;\r\n\r\n  constructor(private hardtestService: HardtestService) {\r\n  }\r\n\r\n  ngOnInit() {\r\n  }\r\n\r\n  stopHardtest(): void {\r\n    this.hardtestService.stopHardtest()\r\n      .subscribe((respond) => {\r\n        this.stopRespond = respond;\r\n      });\r\n  }\r\n\r\n  startHardtest(test: Test): void {\r\n    this.hardtestService.startHardtest(test)\r\n      .subscribe((respond) => {\r\n        this.startRespond = respond;\r\n      });\r\n  }\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/test-form/test-form.component.ts","export class Test {\r\n  url: string;\r\n  servers: number;\r\n  threads: number;\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/test.ts","// The file contents for the current environment will overwrite these during build.\r\n// The build system defaults to the dev environment which uses `environment.ts`, but if you do\r\n// `ng build --env=prod` then `environment.prod.ts` will be used instead.\r\n// The list of which env maps to which file can be found in `.angular-cli.json`.\r\n\r\nexport const environment = {\r\n  production: false\r\n};\r\n\n\n\n// WEBPACK FOOTER //\n// ./src/environments/environment.ts","import { enableProdMode } from '@angular/core';\r\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\r\n\r\nimport { AppModule } from './app/app.module';\r\nimport { environment } from './environments/environment';\r\n\r\nif (environment.production) {\r\n  enableProdMode();\r\n}\r\n\r\nplatformBrowserDynamic().bootstrapModule(AppModule)\r\n  .catch(err => console.log(err));\r\n\n\n\n// WEBPACK FOOTER //\n// ./src/main.ts"],"sourceRoot":"webpack:///"}